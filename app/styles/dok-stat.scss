.dok-stat{
  $iconSize: 4.5mm;
  flex-grow: 1;
  .dok-stat-info {
    display: flex;
    justify-content: space-around;
  }
  .dok-stat-icon {
    width: $iconSize;
    height: $iconSize;
    content: url("icons/svg/stat/other.svg");
  }
  .dok-stat-value {
    flex-basis: 8mm;
    line-height: $iconSize;
    text-align: center;
  }
  .legend{
    font-size: 2mm;
  }
  
}

.dok-stat{
  .dok-stat-icon {

    &.creatures {
      content: url("icons/svg/stat/creature.svg");
    }
    &.actions {
      content: url("icons/svg/stat/action.svg");
    }
    &.artifacts {
      content: url("icons/svg/stat/artifact.svg");
    }
    &.upgrades {
      content: url("icons/svg/stat/upgrade.svg");
    }
    &.synergy {
      content: url("icons/svg/stat/synergy.svg");
    }
    &.antiSynergy {
      content: url("icons/svg/stat/anti-synergy.svg");
    }
    &.aemberControl {
      content: url("icons/svg/stat/amber-control.svg");
    }
    &.expectedAember {
      content: url("icons/svg/stat/expected-amber.svg");
    }
    &.efficiency {
      content: url("icons/svg/stat/efficiency.svg");
    }
    &.recursion {
      content: url("icons/svg/stat/recursion.svg");
    }
    &.disruption {
      content: url("icons/svg/stat/disruption.svg");
    }
    &.artifactControl {
      content: url("icons/svg/stat/artifact-control.svg");
    }
    &.creatureControl {
      content: url("icons/svg/stat/creature-control.svg");
    }
    &.effectivePower {
      content: url("icons/svg/stat/power.svg");
    }
    &.creatureProtection {
      content: url("icons/svg/stat/creature-protection.svg");
    }
    &.other {
      content: url("icons/svg/stat/other.svg");
    }
    &.rawAmber {
      content: url("icons/svg/stat/amber-icon.svg");
    }
    &.keyCheat {
      content: url("icons/svg/stat/key-cheat-icon.svg");
    }
    &.archive {
      content: url("icons/svg/stat/archive-icon.svg");
    }
    &.aerc {
      content: url("icons/svg/stat/aerc.svg");
    }
    &.meta {
      content: url("icons/svg/stat/meta.svg");
    }
  }
}